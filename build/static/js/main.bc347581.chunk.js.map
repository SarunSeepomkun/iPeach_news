{"version":3,"sources":["Api/news.js","Components/Feed.js","App.js","index.js"],"names":["GetNewsList","props","a","changeAbleURL","axios","get","data","useStyle","makeStyles","root","maxWidth","media","height","Feed","classes","useState","news","setNews","loading","setLoading","GetFeed","articles","console","log","useEffect","style","width","Box","m","p","display","flexDirection","flexWrap","alignItems","justifyContent","Array","from","map","item","index","key","Card","className","CardActionArea","CardMedia","image","urlToImage","title","CardContent","Typography","gutterBottom","variant","component","color","description","CardActions","Link","href","url","target","Button","size","Skeleton","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAEaA,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,4DACb,iDACI,2CAEZC,EAJqB,UACb,kDADa,OAET,4CAFS,kBAMFC,IAAMC,IAAIF,GANR,uBAMjBG,EANiB,EAMjBA,KANiB,kBAQhBA,GARgB,+KAAH,sD,gGCYlBC,EAAWC,YAAW,CAC1BC,KAAM,CAAEC,SAAU,KAClBC,MAAO,CAAEC,OAAQ,OAmFJC,MAhFf,SAAcZ,GAGZ,IAAMa,EAAUP,IAHG,EAIKQ,mBAAS,IAJd,mBAIZC,EAJY,KAINC,EAJM,OAKYF,oBAAS,GALrB,mBAKZG,EALY,KAKFC,EALE,KAObC,EAAO,uCAAG,8BAAAlB,EAAA,sEACWF,EAAY,IADvB,gBACRqB,EADQ,EACRA,SAENJ,EAAQI,GAERF,GAAW,GAEXG,QAAQC,IAAIF,GAPE,2CAAH,qDAcb,OAJAG,qBAAU,WACRJ,MACA,IAGA,yBAAKK,MAAO,CAAEC,MAAO,SACnB,kBAACC,EAAA,EAAD,CACEC,EAAG,EACHC,EAAG,EACHC,QAAQ,OACRC,cAAc,MACdC,SAAS,OACTC,WAAW,aACXC,eAAe,WAEbhB,EAAUiB,MAAMC,KAAK,IAAID,MAAM,IAAMnB,GAAMqB,KAAI,SAACC,EAAMC,GAAP,OAC/C,kBAACZ,EAAA,EAAD,CAAKa,IAAKD,EAAOV,EAAG,GACjBS,EACC,kBAACG,EAAA,EAAD,CAAMC,UAAW5B,EAAQL,MACvB,kBAACkC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEF,UAAW5B,EAAQH,MACnBkC,MAAOP,EAAKQ,WACZC,MAAOT,EAAKS,QAEd,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7Cd,EAAKS,OAER,kBAACE,EAAA,EAAD,CACEE,QAAQ,QACRE,MAAM,gBACND,UAAU,KAETd,EAAKgB,eAIZ,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,KAAMnB,EAAKoB,IAAKC,OAAO,UAC3B,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQR,MAAM,WAA3B,gBAON,kBAAC1B,EAAA,EAAD,CAAKE,EAAG,EAAGa,UAAW5B,EAAQL,MAC5B,kBAACqD,EAAA,EAAD,CAAUX,QAAQ,OAAOzB,MAAO,IAAKd,OAAQ,MAC7C,kBAACkD,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,CAAUpC,MAAM,aAKtB,kBAACkC,EAAA,EAAD,CAAQT,QAAQ,YAAYY,QAAS3C,EAASK,MAAO,CAAEC,MAAO,OAAShB,SAAS,WAAhF,WCvEKsD,MAff,WACE,OACE,yBAAKvC,MAAO,CAAEC,MAAO,SACrB,kBAACC,EAAA,EAAD,CAAKG,QAAQ,OAAOE,SAAS,OAAOD,cAAc,SAASG,eAAe,SAASN,EAAG,EAAGC,EAAG,GAC1F,kBAACF,EAAA,EAAD,CAAKE,EAAG,GAAR,eAGA,kBAACF,EAAA,EAAD,CAAKE,EAAG,GACR,kBAAC,EAAD,UCPNoC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.bc347581.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const GetNewsList = async (props) => {\r\n  const URL = \"http://newsapi.org/v2/top-headlines?country=th\";\r\n  const API_KEY = \"&apiKey=733cac916ec242ddb943eedf444d2ca5\";\r\n\r\n  let changeAbleURL = `${URL}${API_KEY}`;\r\n  try {\r\n    let { data } = await axios.get(changeAbleURL);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    return `Error : cannot get data from newsapi.org ${error}`;\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { GetNewsList } from \"../Api/news\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nconst useStyle = makeStyles({\r\n  root: { maxWidth: 345 },\r\n  media: { height: 200 },\r\n});\r\n\r\nfunction Feed(props) {\r\n  \r\n\r\n  const classes = useStyle();\r\n  const [news, setNews] = useState([]);\r\n  const [loading , setLoading] = useState(true);\r\n\r\n  const GetFeed = async () => {\r\n    let { articles } = await GetNewsList(\"\");\r\n\r\n    setNews(articles);\r\n    \r\n    setLoading(false);\r\n\r\n    console.log(articles);\r\n  };\r\n\r\n  useEffect(() => {\r\n    GetFeed();\r\n  },[]);\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <Box\r\n        m={2}\r\n        p={1}\r\n        display=\"flex\"\r\n        flexDirection=\"row\"\r\n        flexWrap=\"wrap\"\r\n        alignItems=\"flex-start\"\r\n        justifyContent=\"center\"\r\n      >\r\n        {(loading ? Array.from(new Array(6)) : news).map((item, index) => (\r\n          <Box key={index} p={1}>\r\n            {item ? (\r\n              <Card className={classes.root}>\r\n                <CardActionArea>\r\n                  <CardMedia\r\n                    className={classes.media}\r\n                    image={item.urlToImage}\r\n                    title={item.title}\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {item.title}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                    >\r\n                      {item.description}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                  <Link href={item.url} target=\"_blank\">\r\n                    <Button size=\"small\" color=\"primary\">\r\n                      Read More\r\n                    </Button>\r\n                  </Link>\r\n                </CardActions>\r\n              </Card>\r\n            ) : (\r\n              <Box p={1} className={classes.root}>\r\n                <Skeleton variant=\"rect\" width={345} height={200} />\r\n                <Skeleton />\r\n                <Skeleton width=\"60%\" />\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        ))}\r\n          <Button variant=\"contained\" onClick={GetFeed} style={{ width: \"100%\" , maxWidth:'1035px' }}>\r\n            Feed\r\n          </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n","import React from 'react';\nimport './App.css';\nimport Feed from './Components/Feed';\nimport Box from \"@material-ui/core/Box\";\n\nfunction App() {\n  return (\n    <div style={{ width: '100%' }}>\n    <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"column\" justifyContent=\"center\" m={1} p={1}>\n      <Box p={1}>\n        IPEACH NEWS\n      </Box>\n      <Box p={1}>\n      <Feed />\n      </Box>\n    </Box>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}